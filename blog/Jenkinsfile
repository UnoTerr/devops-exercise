node { /*
    image = sh (script: 'git rev-parse --short HEAD', returnStdout: true).trim()
    host = 'eu.gcr.io/terraformar/unoterr1/blog_comp:'
   
    stage('Checkout code') {
        checkout scm
   
    }
    stage('Build Image and Push') {
        withEnv(['HOST='+host, 'IMAGE='+image]){
            dir('blog') {
               sh """
                docker-compose build blog
                docker-compose push blog
                """.stripIndent()
            }
        }
    }   
    stage('Plan') {
        dir('blog/terraform/all') {
           // sh 'rm terraform.tfstate*'
            sh 'terraform init -input=false'
            sh "terraform plan -input=false -out tfplan -var 'image=${image}'"
            sh 'terraform show -no-color tfplan'
        }
    }
    stage('Apply') {
        dir('blog/terraform/all') {
                sh "terraform apply -auto-approve tfplan"
            }
        }  */
        stage('Show') {
        dir('blog/terraform/all') {
                sh "terraform state rm module.vpc.google_compute_network.vpc_network"
                sh "terraform state rm module.sql.google_sql_user.db_user"
            }
        }
}
