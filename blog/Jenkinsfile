node { 
//    def app
    def image = sh "git rev-parse --short HEAD"
    def host = '192.168.64.3:5000/unoterr1/blog_comp:'
    stage('Checkout code') {
        checkout scm
    }

//                export HOST="${env.HOST}"
//    withEnv(['HOST=192.168.64.3:5000/unoterr1/blog_comp:', 'IMAGE=']){

//                export IMAGE="${env.BUILD_NUMBER}"
//                envsubst < docker-tmp.yml > docker-compose.yml 

    withEnv(['HOST='+host, 'IMAGE='+image]){
        stage('Build image and push') {
            dir('/blog') {
               sh """
                docker-compose build blog
                docker-compose push blog
                """.stripIndent()
            }
        }
    }

/*
    stage('Push') {
//        sh """docker-compose push blog"""
//        docker.withRegistry('https://registry.hub.docker.com/', 'hub') {    
//        docker.withRegistry('http://localhost:55001/') {        
//          app.push("${env.BUILD_NUMBER}")   
//          app.push("latest")        
//            }    
        }

    withCredentials([string(credentialsId: 'HOST', variable: 'HOST'),
        string(credentialsId: 'USER', variable: 'USER'),
        string(credentialsId: 'PASS', variable: 'PASS'),
        string(credentialsId: 'NAME', variable: 'NAME')]) {
            stage('Deploy App') {
//       sh 'minikube start'
//        sh 'eval $(minikube docker-env)' //Configure environment to use minikubeâ€™s Docker daemon
//            sh "cd blog && python3 secret.py ${env.NAME} ${env.PASS} ${env.DB} ${env.HOST}" 
//            sh "cd blog && kubectl apply -f mysecret.yaml"

//          sh "cd blog && python3 version.py ${env.BUILD_NUMBER}" 
//          sh 'cd blog && kubectl patch deployment blog --patch "$(cat patch.yaml)"'

            sh """
            export IMAGE="${env.BUILD_NUMBER}"
            cd blog && envsubst < blog.yaml > blog_tmp.yaml
            kubectl apply -f blog_tmp.yaml
            """.stripIndent()

//       The following section is done manually because db deployment and services
//       in this case do not need to be recreated everytime because no changes are introduced to them.

//       sh 'cd blog && kubectl apply -f service_db.yaml'
//       sh 'cd blog && kubectl apply -f service_blog.yaml'
//       sh 'cd blog && kubectl apply -f db.yaml'

        }
    }

*/
}
